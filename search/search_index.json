{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Maybe instead of web app and all this, use zig + tinyvg and create a cli app. The image can be made into png and opened. <code>hortus -w 30 -l 50</code></p> <p>Then web app can be whatever and just pass URL params to shell call.</p> <p>Dont know how to handle the plant info. Maybe just flat file? JSON? DB access wouldnt be available easily.</p> <p>At worst, the zig app could pregenerate all the combinations of images and store them for a web app to serve.</p>"},{"location":"#tool-to-generate-forest-garden-designs","title":"Tool to generate forest garden designs","text":"<p>Desired end goal is to have a web app which lets you select certain parameters, then when you click generate, it returns the layout for a forest garden according to your parameters.</p> <p>To start off with it will just be the API backend and a HTTP client as the frontend.</p> <p>Send HTTP POST to URL, it returns a Forest Garden layout Maybe just coordinates and data to start with, not an actual image</p>"},{"location":"#tech-stack","title":"Tech stack:","text":"<ul> <li>Frontend: <ul> <li>generated from backend</li> </ul> </li> <li>Backend:<ul> <li>FastAPI</li> <li>SQLModel</li> <li>Arq + Redis</li> </ul> </li> <li>Database:<ul> <li>Postgresql</li> </ul> </li> </ul>"},{"location":"#development","title":"Development","text":""},{"location":"#sketch","title":"Sketch","text":"<ul> <li>Write short document explaining what the app is and what it does</li> <li>Create initial wireframes for pages<ul> <li>The main content should be at the center of the page so it has most focus</li> </ul> </li> </ul>"},{"location":"#phase-1","title":"Phase 1:","text":"<ul> <li>Project bootstrapping<ul> <li>Documentation generation</li> <li>Initial Hello world code</li> <li>Config/settings file</li> <li>Able to deploy for testing</li> <li>Able to generate a basic image</li> </ul> </li> </ul>"},{"location":"#phase-2","title":"Phase 2:","text":"<ul> <li>Can send/receive HTTP requests to HTTP server</li> <li>HTTP server can return test data from app</li> <li>Simple processing of the data</li> </ul> <p>2 separate areas:</p> <ul> <li>image generation<ul> <li>algos to determine plant locations</li> <li>retrieve plant information</li> </ul> </li> <li>which image to get, based on info from client</li> </ul> <p>focus on image generation first</p> <p>does the plant data even need to be in a database? probably should when there are lots of plants</p> <p>can generate SVG with pycairo. Dont need to convert to PNG, SVG is more efficient you have to move around manually. Might need to do the image in layers, like trees first, then shrubs, and keep working around until all done.</p> <p>jinja2 for templating? https://fastapi.tiangolo.com/advanced/templates/  use NGINX cache to cache the generated SVG files (compress/minify them first anyway) https://docs.nginx.com/nginx/admin-guide/content-cache/content-caching/</p>"},{"location":"#phase-3","title":"Phase 3:","text":"<ul> <li>Able to connect to database</li> <li>Database schema migrations and SQL generation</li> <li>HTTP server can connect to database and return test data</li> <li>Working API backend which when sending a request with a HTTP client, returns a JSON response which describes a basic garden layout and plant attributes.</li> <li>Backend can determine basic relationships between plants from test data</li> </ul>"},{"location":"#phase-4","title":"Phase 4:","text":"<ul> <li>More sophisticated methods for determining relationships between plants from test data</li> </ul>"},{"location":"#phase-5","title":"Phase 5:","text":"<ul> <li>API backend returns generated basic images instead of JSON data</li> </ul>"},{"location":"#future","title":"Future","text":"<ul> <li>Range slider which displays the growth over time of the forest garden</li> <li>Expand to larger land area</li> <li>Expand variety of plants</li> <li>Different geographic regions than just UK</li> </ul>"},{"location":"#notes","title":"Notes","text":"<p>Write the documentation and text on the website from a gardeners perspective, not an IT one. Someone wanting a garden layout doesnt care that its written in X programming language using X framework.</p> <ul> <li>Deployment to server running NGINX Unit. SCP new binary to server. Ping Unit to load new app.</li> <li>Look into how to generate SVG images<ul> <li>SVG are text. If we minify and compress them, could we serve them direct from a HTTP cache in front rather than storing them in object storage.</li> </ul> </li> <li>Think about design of the frontend, how will it look? Buttons and sliders then click submit?<ul> <li>How to handle scale? Need to set max limit on size otherwise it wont fit on screen and take loads of CPU time.</li> <li>Maybe set reasonable limits and just say if you need bigger then run it multiple times and join them up yourself.</li> <li>Maybe use standard colours to denote canopy layer, climbers, perrenials etc. Then have a text output which has a key and explains what specific plants are used.</li> </ul> </li> <li>Rate limiting, caching etc.</li> <li>If you want to show changes over time, you'd need to generate a long series of images, or a GIF/video. So you may want to cache requests and already generated images when they have been generated before. Then maybe have an option to generate a new image which bypasses the cache.</li> <li>Lots of variables to consider<ul> <li>Initial input parameters</li> <li>Light, wind, water</li> <li>Plants relationships to one another</li> <li>geographic location - will determine sun location, average temperature, hardiness zones</li> </ul> </li> </ul>"},{"location":"#mscw","title":"MSCW","text":"<ul> <li>field inputs to change grid, like size or zone/climate type</li> <li>show time periods to show different timelines of the plants. First planted / X years / X decades. Trees will outlive most plants. Perrenials last longer than biennial etc.</li> <li>need a DB containing the different plants/trees and weighting for different plants.</li> <li>draw walls and ponds/lakes/water feature. Some plants like walls/shade. Some plants are aquatic.</li> <li>needs to be layered. Trees take up lots of space higher up, not so much at the base of the trunk. May also need to show underground, as some plants have tubers or other specific root structures.</li> <li>Square grid. Use regular shapes (just squares/rectangles?) to show plant location and area taken up.</li> <li>Application is responsible for generating the grid locations for each plant, then its up to the frontend to decide how to display it.</li> <li>Maybe instead of layers it could be 3 separate images, one for each layer. Then they could be side-by-side. Or overlaid, depends on the frontend.</li> <li>Label the circles underneath with an ID number, then have a key at the side that says the plant name and a link to a page which describes all aspects about that plant.</li> <li>Wont do - Seaweed app like vertical ocean farming. This can be done later or as a second app.</li> </ul>"},{"location":"#image-generation-notes","title":"Image generation notes","text":"<p>Take pycairo context object and pass to other functions. They individually apply their changes to the context in turn for the different things, so its like applying layers to the picture. Iterate over canopy layer, shrub layer etc.</p> <p>Then the final result can be the returned context.</p> <p>The order of the drawing is important. Later drawings appear on top of earlier drawings</p> <p>Can draw lines for borders of plants, but what about symbols for denoting trees and plants?  Circles and rectangles? different colours? Tree wavy line shape? Maybe basic initially to get the placements correct, then have prebuilt SVG bits for tree shapes? Use fractals or spirals or something to generate them? I need this to look professional.</p>"},{"location":"design-stages/","title":"Design Stages","text":"<p>These are the chapters in the book:</p> <ul> <li>Ground preparation and planting</li> <li>Growing your own plants</li> <li>First design steps</li> <li>Designing wind protection</li> <li>Canopy species</li> <li>Design the canopy layer</li> <li>Shrub species</li> <li>Design the shrub layer</li> <li>Herbaceous perrenial and ground-cover species</li> <li>Designing the perennial/ground-cover layer</li> <li>Annuals, biennials and climbers</li> <li>Designing with annuals, biennials and climbers</li> <li>Clearings</li> <li>Paths</li> <li>Fungi in forest gardens</li> <li>Harvesting and preserving</li> <li>Maintenance</li> <li>Ongoing tasks</li> </ul> <p>Maybe have a page for each with a summary page or PDF generated at the end?</p> <p>This app is meant to make it easy though, not go into too much detail. Things like paths and clearings should just be autogenerated.</p> <p>Same with choosing plants, have some simple defaults, then it can be expanded later.</p>"},{"location":"plant-info/","title":"Plant Information","text":""},{"location":"plant-info/#plant-information","title":"Plant information","text":""},{"location":"plant-info/#deciduousevergreen","title":"Deciduous/Evergreen","text":"<p>D indicates a deciduous woody plant or a herbaceous perennial that dies down to roots in winter. E indicates an evergreen plant. SE indicates a semi-evergreen plant.</p>"},{"location":"plant-info/#zone-hardiness-zone","title":"Zone (Hardiness zone)","text":"<p>The zone number given for a plant gives an indication of its hardiness. The zone number indicates the minimum average winter temperatures that a plant can tolerate.</p>"},{"location":"plant-info/#sunshade-preference","title":"Sun/shade preference","text":"<p>This indicates the light conditions a plant really prefers and will thrive in.</p> <ul> <li>Full sun</li> <li>Light shade</li> <li>Moderate shade</li> <li>Deep shade</li> </ul>"},{"location":"plant-info/#shade-tolerance","title":"Shade tolerance","text":"<p>This indicates the shadiest conditions that a plant will grow happily in and persist.</p> <ul> <li>Does not tolerate shade</li> <li>Tolerates light shade</li> <li>Tolerates moderate shade</li> <li>Tolerates fairly deep shade</li> <li>Tolerates deep shade beneath evergreen trees and shrubs</li> </ul>"},{"location":"plant-info/#performance-ratings","title":"Performance ratings","text":"<p>This indicates how well the plant performs in a forest garden, how well it grows and crops.</p>"},{"location":"plant-info/#fertility","title":"Fertility","text":"<p>If the plant is a fruiting plant:</p> <ul> <li>SF Self-fertile</li> <li>PSF Partially self-fertile</li> <li>SS Self-sterile</li> <li>M/F Male and female plants</li> </ul>"},{"location":"plant-info/#cover","title":"Cover","text":"<p>For ground-layer plants, this indicates how well a dense planting covers the ground and excludes weeds.</p> <ul> <li>Poor</li> <li>Fair</li> <li>Good</li> <li>Very Good</li> </ul>"},{"location":"plant-info/#products-of-a-forest-garden","title":"Products of a Forest Garden","text":"<ul> <li>Fruits</li> <li>Vegetables</li> <li>Salad crops and herbs</li> <li>Dye plants</li> <li>Spices</li> <li>Poles and canes</li> <li>Basketry materials</li> <li>Medicinal plants</li> <li>Soap plants</li> <li>Sap and wood products</li> <li>Nuts and seeds</li> <li>Firewood</li> <li>Tying materials</li> <li>Mushrooms</li> <li>Honey</li> </ul>"}]}